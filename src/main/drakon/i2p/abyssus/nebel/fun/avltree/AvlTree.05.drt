ИС Дракон © Тышов Г.Н. A
3,,,,,01.01.2015,"Tahoma,1,10,0,0",10,,,,
0,1,14,,,,,"""Приватный, статический"""
4,2,330,135,-120,-15,120,15,2,4,,,findLeftmostNode,,"Предусловия:,""* Указанный корень существует. Не проверяется явно."",""* Дополняемый путь существует. Не проверяется явно.""","""Поиск самого левого узла в указанном поддереве."",,""Метод ищет и возвращает самый левый узел поддерева, заданного указанным корнем."",,""Во время работы, метод дополняет указанный путь пройденными узлами, от указанного корня и до искомого включительно. Соответствие корня поддерева и пути никак не проверяется, и возлагается на вызывающий код.""","Исключения:,""* Null pointer exception - Если любой из аргументов не существует."",,Постусловия:,""* Возвращён самый левый узел поддерева."",""* Указанный путь дополнен пройденными узлами, от указанного корня, до целевого узла включительно.""",0,
5,3,330,480,-60,-15,60,15,,,,,Конец,,,"""Возвращаем левейший узел.""",,0,
24,4,510,135,-30,-15,90,15,,,,,аргументы,,,"""Типовые параметры:"",""* Тип элементов поддерева."",,Аргументы:,""* Корень поддерева."",""* Дополняемый путь.""",,0,
25,5,90,135,-30,-15,90,15,0,,,,результат,,,"Результат:,""* Самый левый узел поддерева."",,Исключения:,""* Null pointer exception - Если любой из аргументов не существует.""",,0,
6,6,330,195,-90,-15,90,15,,5,,,Подготовка,,,"""Новые переменные:"",""* Левейший узел. Изначально соответствует указанному корню.""",,0,
36,7,330,240,,,,,8,6,,,,,,,,0,C
8,8,330,285,-90,-15,90,15,9,13,,,Левее?,,,"""Проверяем, существует ли левый дочерний узел левейшего узла.""",,0,D
36,9,675,435,,,,,,,,,,,,,,0,
36,10,675,240,,,,,,7,,,,,,,,0,
36,11,555,285,,,,,,12,,,,,,,,0,
36,12,555,435,,,,,7,,,,,,,,,0,
6,13,555,390,-90,-15,90,15,,10,,,Левее,,,"""Замещаем левейший узел его левым дочерним узлом.""",,0,
6,29,555,330,-90,-15,90,15,,11,,,Путь,,,"""Дополняем путь левейшим узлом.""",,0,
6,30,330,345,-90,-15,90,15,,1,,,Путь,,,"""Дополняем путь левейшим узлом.""",,0,
0,14,14,,,,,"""Приватный, статический"""
4,15,1035,135,-120,-15,120,15,2,4,,,findRightmostNode,,"Предусловия:,""* Указанный корень существует. Не проверяется явно."",""* Дополняемый путь существует. Не проверяется явно.""","""Поиск самого правого узла в указанном поддереве."",,""Метод ищет и возвращает самый правый узел поддерева, заданного указанным корнем."",,""Во время работы, метод дополняет указанный путь пройденными узлами, от указанного корня и до искомого включительно. Соответствие корня поддерева и пути никак не проверяется, и возлагается на вызывающий код.""","Исключения:,""* Null pointer exception - Если любой из аргументов не существует."",,Постусловия:,""* Возвращён самый правый узел поддерева."",""* Указанный путь дополнен пройденными узлами, от указанного корня, до целевого узла включительно.""",0,
5,16,1035,480,-60,-15,60,15,,,,,Конец,,,"""Возвращаем правейший узел.""",,0,
24,17,1215,135,-30,-15,90,15,,,,,аргументы,,,"""Типовые параметры:"",""* Тип элементов поддерева."",,Аргументы:,""* Корень поддерева."",""* Дополняемый путь.""",,0,
25,18,795,135,-30,-15,90,15,0,,,,результат,,,"Результат:,""* Самый правый узел поддерева."",,Исключения:,""* Null pointer exception - Если любой из аргументов не существует.""",,0,
6,19,1035,195,-90,-15,90,15,,5,,,Подготовка,,,"""Новые переменные:"",""* Правейший узел. Изначально соответствует указанному корню.""",,0,
36,20,1035,240,,,,,8,6,,,,,,,,0,C
8,21,1035,285,-90,-15,90,15,9,13,,,Правее?,,,"""Проверяем, существует ли правый дочерний узел правейшего узла.""",,0,D
36,22,1380,435,,,,,,,,,,,,,,0,
36,23,1380,240,,,,,,7,,,,,,,,0,
36,24,1260,285,,,,,,12,,,,,,,,0,
36,25,1260,435,,,,,7,,,,,,,,,0,
6,26,1260,390,-90,-15,90,15,,10,,,Правее,,,"""Замещаем правейший узел его правым дочерним узлом.""",,0,
6,27,1260,330,-90,-15,90,15,,11,,,Путь,,,"""Дополняем путь правейшим узлом.""",,0,
6,28,1035,345,-90,-15,90,15,,1,,,Путь,,,"""Дополняем путь правейшим узлом.""",,0,
0,31,24,,,,,Публичный
4,32,1710,135,-90,-15,90,15,2,5,,,remove,,,"""Удаление элемента."",,""Метод удаляет из дерева элемент с указанным ключом. Возвращает удалённый элемент. Если элемент с указанным ключом отсутствует, то дерево остаётся неизменным, а метод возвращает значение null.""","Постусловия:,""* Если элемент с указанным ключом был найден в дереве:"",""	* Элемент удалён из дерева."",""	* Один из листовых узлов изъят из дерева:"",""		* Ссылка на изъятый узел в его родительском узле, или корне дерева, обнулена."",""		* Изъятый узел исключён из цепочки узлов."",""		* Изъятый узел очищен."",""	* Произведена ребалансировка дерева."",""	* Кеш пути сброшен."",""	* Размер дерева уменьшен на единицу."",""	* Версия дерева увеличена."",""	* Возвращён удалённый элемент."",""* В противном случае:"",""	* Возвращено значение null.""",0,
5,33,1710,855,-60,-15,60,15,,,,,Конец,,,"""Возвращаем удалённый элемент.""",,0,
24,34,1860,135,-30,-15,90,15,,,,,аргументы,,,"Аргументы:,""* Ключ удаляемого элемента.""",,0,
25,35,1500,135,-30,-15,90,15,0,,,,результат,,,"Результат:,""* Удалённый элемент, или значение null.""",,0,
6,36,1710,255,-90,-15,90,15,,6,,,Подготовка,,,"""Новые переменные:"",""* Целевой узел. Изначально соответствует узлу на вершине найденного пути."",""* Удаляемый элемент. Изначально не существует.""",,0,
7,37,1710,195,-90,-15,90,15,,4,,,"""Поиск пути""",,,"""Обращаемся к методу поиска пути по указанному ключу.""",,0,
8,38,1710,315,-90,-15,90,15,8,17,,,"""Цель найдена?""",,,"""Мы можем удалить элемент с указанным ключом из дерева, только если узел с таким элементом найден в дереве:"",""* Убеждаемся в существовании целевого узла."",""* Убеждаемся в равенстве указанного ключа ключу элемента целевого узла.""",,0,
36,39,1710,810,,,,,9,1,,,,,,,,0,
36,40,2085,315,,,,,,9,,,,,,,,0,
36,41,2085,810,,,,,,,,,,,,,,0,
36,42,1710,420,,,,,13,11,,,,,,,,0,C
8,43,1710,465,-90,-15,90,15,14,19,,,Childfree?,,,"""Повторяем пока целевой узел не является листом.""",,0,
36,44,2055,615,,,,,,,,,,,,,,0,
36,45,2055,420,,,,,,12,,,,,,,,0,
36,46,1935,465,,,,,,16,,,,,,,,0,
36,47,1935,615,,,,,12,,,,,,,,,0,
6,48,1935,510,-90,-15,90,15,,18,,,"""Новая цель""",,,"""Поиск нового целевого узла, с дополнением найденного пути:"",""* Если высота левого поддерева выше, либо равна высоте правого поддерева целевого узла:"",""	* Самый правый узел левого поддерева."",""* В противном случае:"",""	* Самый левый узел правого поддерева.""",,0,
6,49,1710,375,-90,-15,90,15,,10,,,Элемент,,,"""Запоминаем удаляемый элемент.""",,0,
6,50,1935,570,-90,-15,90,15,,15,,,Перенос,,,"""Перенос цели:"",""* Замещаем элемент текущего целевого узла элементом новой цели."",""* Замещаем текущую цель новой.""",,0,
7,51,1710,525,-90,-15,90,15,,20,,,"""Удаление узла""",,,"""Обращаемся к методу удаления узла из дерева, передав дополненный путь.""",,0,
7,52,1710,585,-90,-15,90,15,,21,,,Ребалансировка,,,"""Обращаемся к методу ребалансировки оставшейся части пути.""",,0,
6,53,1710,645,-90,-15,90,15,,23,,,"""Кеш пути""",,,"""Сбрасываем кеш пути:"",""* Обнуляем последний найденный путь."",""* Обнуляем последний искомый ключ.""",,0,
6,54,1710,765,-90,-15,90,15,,7,,,"""Версия дерева""",,,"""Увеличиваем версию дерева.""",,0,
6,55,1710,705,-90,-15,90,15,,22,,,"""Размер дерева""",,,"""Уменьшаем размер дерева.""",,0,
