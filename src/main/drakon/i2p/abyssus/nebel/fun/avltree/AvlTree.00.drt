ИС Дракон © Тышов Г.Н. A
1,,,,,01.01.2015,"Tahoma,1,10,0,0",10,,,,
0,1,15,,,,,Приватный
4,2,300,135,-90,-15,90,15,2,12,,,linkChildNode,,"Предусловия:,""* Указанный родительский узел существует. Не проверяется явно."",""* Указанный узел - подходящий родитель для узла с новым элементом. Не проверяется.""","""Присоединение дочернего узла."",,""Метод создает и присоединяет к указанному родительскому узлу новый дочерний узел, содержащий указанный элемент. Никаких проверок не производится, поэтому вызывающий код должен удостоверится, что указанный родительский узел может выступать родителем дочернего узла с указанным содержимым (элементом)."",,""При присоединении дочернего узла, метод определяет свободную ветку родительского узла, присоединяя к ней новый дочерний узел. Поскольку никаких проверок на допустимость не производится, указанный родительский узел должен содержать свободную дочернюю ветку с подходящей для указанного элемента стороны, иначе произойдёт нарушение логической структуры дерева. Если обе дочерние ветки свободны, нужная определяется сравнением ключей элементов. Кроме прикрепления к родительскому узлу, метод встраивает созданный узел в цепочку узлов, в зависимости от занимаемой дочерней ветки. При необходимости проводится коррекция ссылок на крайние узлы цепочки."",,""По окончании работы, метод возвращает созданный дочерний узел.""","Исключения:,""* Null pointer exception - Если указанный родительский узел не существует."",,Постусловия:,""* Создан новый узел содержащий указанный элемент."",""* Если в родительском узле занята правая дочерняя ветка, то новый узел занимает левую дочернюю ветку."",""* Если в родительском узле занята левая дочерняя ветка, то новый узел занимает правую дочернюю ветку."",""* Если в родительском узле свободны обе дочерние ветки, то нужная определена сравнением ключей."",""* Новый узел встроен в цепочку, с соответствующей стороны от родительского узла."",""* Только наилевейший узел не имеет предшествующего узла."",""* Только наиправейший узел не имеет следующего узла."",""* Возвращён созданный узел.""",0,
5,3,300,525,-60,-15,60,15,,,,,Конец,,,"""Возвращаем созданный узел.""",,0,
24,4,450,135,-30,-15,90,15,,,,,аргументы,,,"Аргументы:,""* Родительский узел."",""* Элемент нового узла.""",,0,
25,5,90,135,-30,-15,90,15,0,,,,результат,,,"Результат:,""* Созданный дочерний узел."",,Исключения:,""* Null pointer exception - Если указанный родительский узел не существует.""",,0,
8,6,300,255,-90,-15,90,15,6,8,,,"""Левая нода?""",,,"""Новый узел занимает левую дочернюю ветку родительского, если:"",""* Правый дочерний узел родительского узла существует, или выполнены условия:"",""	* Левый дочерний узел не существует."",""	* Ключ указанного элемента меньше ключа элемента родительского узла."",,""Во всех остальных случаях новый узел занимает правую дочернюю ветку указанного родительского узла.""",,0,
36,7,300,480,,,,,7,1,,,,,,,,0,
36,8,525,255,,,,,,9,,,,,,,,0,
36,9,525,480,,,,,,,,,,,,,,0,
6,10,300,315,-90,-15,90,15,,10,,,Узел,,,"""Создаём новый узел:"",""* Содержимое - указанный элемент."",""* Предшествующий узел - предшествующий родительскому узлу."",""* Следующий узел - родительский узел.""",,0,
6,11,525,300,-90,-15,90,15,,11,,,Узел,,,"""Создаём новый узел:"",""* Содержимое - указанный элемент."",""* Предшествующий узел - родительский узел."",""* Следующий узел - следующий за родительским узлом.""",,0,
6,12,300,375,-90,-15,90,15,,13,,,Присоединение,,,"""Присоединяем к родительскому узлу:"",""* Новый узел - левый дочерний узел родительского."",""* Новый узел предшествует родительскому узлу.""",,0,
6,13,525,360,-90,-15,90,15,,14,,,Присоединение,,,"""Присоединяем к родительскому узлу:"",""* Новый узел - правый дочерний узел родительского."",""* Новый узел следует за родительским узлом.""",,0,
6,14,300,195,-90,-15,90,15,,4,,,Подготовка,,,"""Новые переменные:"",""* Новый узел.""",,0,
6,15,300,435,-90,-15,90,15,,5,,,Включение,,,"""Корректируем цепочку узлов:"",""* Если узел предшествующий новому существует, то новый следует за предшествующим."",""* В противном случае, новый узел - наилевейший.""",,0,
6,16,525,420,-90,-15,90,15,,7,,,Включение,,,"""Корректируем цепочку узлов:"",""* Если узел следующий за новым существует, то новый узел предшествует следующему."",""* В противном случае, новый узел - наиправейший.""",,0,
