ИС Дракон © Тышов Г.Н. A
5,,,,,01.01.2015,"Tahoma,1,10,0,0",10,,,,
2,1,4,,,,,"""Структура класса"""
36,2,60,90,,,,,,1,,,,,,,,0,
29,3,60,139,,-19,180,19,,3,,,Описание,,,"""Реализация АВЛ-дерева (""""https://ru.wikipedia.org/wiki/АВЛ-дерево"""")."",,""Ключи элементов должны попарно отличаться, с точки зрения компаратора ключей. Дерево может принимать в качестве элементов значения null, если указанный при создании дерева экстрактор ключей принимает значения null. Все значения ключей возвращаемые экстрактором должны приниматься компаратором."",,""Типовые параметры:"",""* <E> - Тип элементов."",""* <K> - Тип ключей элементов.""",,0,
36,4,60,256,,,,,,,,,,,,,,0,
29,18,60,207,,-19,240,19,,2,,,"""Детали реализации""",,,"""Дерево представлено узлами. Узлы дополнительно образуют двусвязный список. Ключи элементов в списке узлов, упорядочены от меньших к большим.""",,0,
2,5,12,,,,,"""Структура объекта"""
36,6,390,90,,,,,,1,,,,,,,,0,
31,7,390,135,,-15,180,15,,7,,,"""Приватные поля""",,,"""Описание приватных полей экземпляров класса.""",,0,
36,8,390,720,,,,,,,,,,,,,,0,
30,9,390,495,,-15,180,15,,11,,,version,,,"""Версия дерева."",,""Необходима для правильной работы итераторов. Увеличивается при каждой модификации.""",,0,
30,10,390,315,,-15,180,15,,5,,,rootNode,,,"""Корень дерева. Существует, если дерево не пусто.""",,0,
30,11,390,375,,-15,180,15,,6,,,leftmostNode,,,"""Самый левый узел. Существует, если дерево не пусто.""",,0,
30,12,390,435,,-15,180,15,,3,,,rightmostNode,,,"""Самый правый узел. Существует, если дерево не пусто.""",,0,
30,13,390,195,,-15,180,15,,8,,,keyExtractor,,,"""Экстрактор ключей.""",,0,
30,14,390,255,,-15,180,15,,4,,,keyComparator,,,"""Компаратор ключей.""",,0,
30,15,390,615,,-15,180,15,,10,,,lastFoundPath,,,"""Последний найденный путь."",,""Кеш пути к узлу c последним искомым ключом. Обновляется при поиске узла с любым ключом отличным от запрошенного в последний раз. Сбрасывается при любой модификации дерева.""",,0,
30,16,390,675,,-15,180,15,,2,,,lastSearchedKey,,,"""Последний искомый ключ."",,""Значение последнего искомого ключа. Необходимо для нормальной работы кеша пути к ключу. Используется только в случае, когда сам кеш не сброшен. Обновляется при поиске узла с любым отличным ключом. Сбрасывается при любой модификации дерева.""",,0,
30,17,390,555,,-15,180,15,,9,,,size,,,"""Размер дерева."",,""Поле содержит число узлов в дереве. Значение поля не должно превышать Integer.MAX_VALUE.""",,0,
0,19,4,,,,,Публичный
4,20,750,135,-90,-15,90,15,2,3,,,конструктор,,"Предусловия:,""* Указанный экстрактор ключей существует. Проверяется всегда."",""* Указанный компаратор ключей существует. Проверяется всегда.""","""Конструктор АВЛ-дерева.""","Постусловия:,""* Установлен указанный экстрактор ключей."",""* Установлен указанный компаратор ключей."",""* Корень дерева не существует."",""* Самый левый узел не существует."",""* Самый правый узел не существует."",""* Версия дерева равна нулю."",""* Размер дерева равен нулю."",""* Кеш пути сброшен."",""* Последний искомый ключ сброшен.""",0,
5,21,750,255,-60,-15,60,15,,,,,Конец,,,,,0,
24,22,900,135,-30,-15,90,15,,,,,аргументы,,,"Аргументы:,""* Экстрактор ключей."",""* Компаратор ключей."",,Исключения:,""* Null pointer exception - Если любой из аргументов не существует.""",,0,
6,23,750,195,-90,-15,90,15,,1,,,Инициализация,,,"Инициализация:,""* Запоминаем экстрактор ключей, убеждаясь в его существовании."",""* Запоминаем компаратор ключей, убеждаясь в его существовании.""",,0,
0,24,24,,,,,Приватный
4,25,1320,135,-90,-15,90,15,3,9,,,findPathByKey,,,"""Поиск пути к узлу."",,""Метод находит и возвращает путь к узлу ключ элемента которого, равен указанному. Отношения ключей определяются компаратором."",,""Путь укладывается на стек начиная с корня дерева, и заканчивая самим искомым узлом, либо его возможным родителем, если узла с указанным ключом не существует.""","Постусловия:,""* Возвращён путь к искомому узлу, или его возможному родителю."",""* Узлы пути уложены на стек:"",""	* Начиная с корня дерева."",""	* Заканчивая искомым узлом, либо его возможным родителем."",""	* Если дерево пусто, то путь тоже пуст."",""* Найденный путь находится в кеше:"",""	* Путь находится в кеше."",""	* Искомый ключ находится в кеше.""",0,
5,26,1320,885,-60,-15,60,15,,,,,Конец,,,"""Возвращаем составленный путь.""",,0,
25,27,1110,135,-30,-15,90,15,0,,,,результат,,,"Результат:,""* Путь к узлу c искомым ключом.""",,0,
24,28,1470,135,-30,-15,90,15,,,,,аргументы,,,"Аргументы:,""* Ключ элемента искомого узла.""",,0,
8,29,1320,255,-90,-15,90,15,6,10,,,Кешировано?,,,"""Определяем, кеширован ли путь. Считаем путь кешированным, если верны условия:"",""* Кеш пути не сброшен."",""* Последний искомый ключ равен указанному.""",,0,D
36,30,1545,840,,,,,,,,,,,,,,0,
36,31,1545,255,,,,,,8,,,,,,,,0,
6,32,1320,435,-90,-15,90,15,,14,,,Подготовка,,,"""Новые переменные:"",""* Результат сравнения ключей."",""* Следующий узел. Изначально равен корню дерева.""",,0,
6,33,1545,300,-90,-15,90,15,,5,,,Кеш,,,"""Считываем путь из кеша.""",,0,
6,34,1320,195,-90,-15,90,15,,4,,,"""Переменная пути""",,,"""Объявляем переменную пути.""",,0,
6,35,1320,315,-90,-15,90,15,,11,,,"""Пустой путь""",,,"""`Создаем пустой путь.""",,0,
8,36,1320,375,-90,-15,90,15,22,7,,,Корень?,,,"""Проверяем существование корня дерева.""",,0,
36,37,1320,840,,,,,5,1,,,,,,,,0,
6,39,1320,795,-90,-15,90,15,,12,,,Кеш,,,"""Помещаем найденный путь в кеш:"",""* Запоминаем сам путь."",""* Запоминаем искомый ключ.""",,0,
36,40,1320,480,,,,,17,20,,,,,,,,0,C
8,41,1320,705,-90,-15,90,15,16,21,,,"""Конец пути?""",,,"""Составление пути окончено, если верно любое из условий:"",""* Следующий узел не существует."",""* Ключ текущего узла равен искомому.""",,0,
36,42,1455,705,,,,,,,,,,,,,,0,
36,43,1455,480,,,,,,16,,,,,,,,0,
6,44,1320,585,-90,-15,90,15,,19,,,Сравнение,,,"""Сравниваем указанный ключ с ключом текущего узла, запоминая результат сравнения.""",,0,
6,45,1320,645,-90,-15,90,15,,15,,,"""Следующий узел""",,,"""Определяем следующий узел:"",""* Если искомый ключ меньше ключа текущего узла, то следующим является левый дочерний узел текущего."",""* В противном случае, следующим является правый дочерний узел текущего.""",,0,
6,46,1320,525,-90,-15,90,15,,18,,,Добавление,,,"""Укладываем узел на вершину пути.""",,0,
36,48,1320,750,,,,,23,13,,,,,,,,0,
36,54,1485,375,,,,,,23,,,,,,,,0,
36,56,1485,750,,,,,,,,,,,,,,0,
0,38,6,,,,,Приватный
4,47,1965,135,-90,-15,90,15,2,4,,,findPath,,,"""Поиск пути к узлу."",,""Метод находит и возвращает путь к узлу с равным по ключу элементом. Отношения ключей определяются компаратором."",,""Путь укладывается на стек начиная с корня дерева, и заканчивая искомым узлом, либо его возможным родителем, если узла содержащего элемент с равным ключом в дереве нет.""","Постусловия:,""* Произведено обращение к методу поиска пути по ключу."",""* Возвращён путь к искомому узлу, или его возможному родителю.""",0,
5,49,1965,315,-60,-15,60,15,,,,,Конец,,,"""Возвращаем найденный путь.""",,0,
24,50,2115,135,-30,-15,90,15,,,,,аргументы,,,"Аргументы:,""* Элемент с искомым ключом.""",,0,
25,51,1755,135,-30,-15,90,15,0,,,,результат,,,"Результат:,""* Путь к узлу содержащему элемент c искомым ключом.""",,0,
6,52,1965,195,-90,-15,90,15,,5,,,Ключ,,,"""Извлекаем ключ указанного элемента.""",,0,
7,53,1965,255,-90,-15,90,15,,1,,,"""Поиск пути""",,,"""Обращаемся к методу поиска пути по ключу.""",,0,
